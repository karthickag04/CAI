# Extended OCR Project Requirements - Deep Learning Pipeline
# Install these packages using: pip install -r requirements.txt

# Core OCR libraries (from previous project)
pytesseract==0.3.10
easyocr==1.7.0

# Deep Learning Frameworks
torch==2.1.1
torchvision==0.16.1
torchaudio==2.1.1

# Alternative: TensorFlow (uncomment if preferred)
# tensorflow==2.15.0
# tensorflow-gpu==2.15.0  # If you have GPU

# Image processing
Pillow==10.0.1
opencv-python==4.8.1.78
albumentations==1.3.1  # For data augmentation

# Data handling
pandas==2.1.3
numpy==1.25.2
scipy==1.11.4

# Machine Learning utilities
scikit-learn==1.3.2
scikit-image==0.22.0

# Visualization
matplotlib==3.8.2
seaborn==0.13.0
plotly==5.17.0

# Progress tracking and utilities
tqdm==4.66.1
wandb==0.16.0  # For experiment tracking (optional)

# Text processing and metrics
nltk==3.8.1
editdistance==0.6.2  # For CER/WER calculation
Levenshtein==0.23.0

# Configuration and logging
PyYAML==6.0.1
tensorboard==2.15.1  # For training visualization

# Dataset utilities
lmdb==1.4.1  # For efficient dataset storage
imgaug==0.4.0  # Additional augmentation

# Optional: For synthetic data generation
Wand==0.6.13  # ImageMagick binding for text rendering

# Development utilities
jupyter==1.0.0
ipywidgets==8.1.1
notebook==7.0.6

# Additional utilities for extended functionality
rich==13.7.0  # Better terminal output
colorama==0.4.6  # Cross-platform colored terminal
tabulate==0.9.0  # Table formatting
humanize==4.8.0  # Human-readable formatting

# Performance and monitoring
psutil==5.9.6  # System and process monitoring
memory-profiler==0.61.0  # Memory usage profiling
line-profiler==4.1.1  # Line-by-line profiling

# Enhanced configuration management
omegaconf==2.3.0  # Advanced configuration
hydra-core==1.3.2  # Configuration composition

# Model optimization and serving
onnx==1.15.0  # Model format conversion
onnxruntime==1.16.3  # ONNX runtime
fastapi==0.104.1  # Modern web framework
uvicorn==0.24.0  # ASGI server
pydantic==2.5.0  # Data validation

# Advanced text processing
sacrebleu==2.3.1  # BLEU score calculation
textdistance==4.6.0  # Additional distance metrics
fuzzywuzzy==0.18.0  # Fuzzy string matching
python-Levenshtein==0.23.0  # Fast edit distance

# Data versioning and MLOps (optional)
dvc==3.26.0  # Data version control
mlflow==2.8.1  # ML experiment tracking

# Testing and code quality
pytest==7.4.3
pytest-cov==4.1.0
black==23.11.0  # Code formatting
flake8==6.1.0  # Code linting
mypy==1.7.1  # Type checking

# Distributed training support
accelerate==0.25.0  # Hugging Face accelerate

# Image quality and analysis
imagehash==4.3.1  # Perceptual hashing
piqa==1.3.2  # Image quality assessment

# Additional data formats
h5py==3.10.0  # HDF5 support
zarr==2.16.3  # Chunked array storage

# Font and text rendering
fonttools==4.44.3  # Font manipulation
freetype-py==2.4.0  # FreeType binding

# Caching and optimization
diskcache==5.6.3  # Disk-based caching
joblib==1.3.2  # Parallel processing

# String processing utilities
regex==2023.10.3  # Advanced regex
charset-normalizer==3.3.2  # Character encoding detection

# JSON processing
ujson==5.8.0  # Ultra fast JSON decoder/encoder
orjson==3.9.10  # Fast JSON library

# Environment and configuration
python-dotenv==1.0.0  # Environment variables from .env
toml==0.10.2  # TOML format support

# Logging enhancements
loguru==0.7.2  # Better logging
structlog==23.2.0  # Structured logging

# Hyperparameter optimization (optional)
optuna==3.4.0  # Hyperparameter optimization
ray[tune]==2.8.0  # Distributed hyperparameter tuning

# Statistical analysis
statsmodels==0.14.0  # Statistical models
pingouin==0.5.3  # Statistical tests

# Network and HTTP utilities
requests==2.31.0  # HTTP library
aiohttp==3.9.1  # Async HTTP client/server
httpx==0.25.2  # Modern HTTP client

# Cloud storage (optional)
boto3==1.34.0  # AWS SDK
google-cloud-storage==2.10.0  # Google Cloud Storage
azure-storage-blob==12.19.0  # Azure Blob Storage

# Database support (optional)
sqlalchemy==2.0.23  # SQL toolkit
sqlite3  # Built-in with Python

# Documentation (optional)
sphinx==7.2.6  # Documentation generator
sphinx-rtd-theme==1.3.0  # Read the Docs theme

# Graph and visualization
networkx==3.2.1  # Graph analysis
graphviz==0.20.1  # Graph visualization

# Mathematical libraries
sympy==1.12  # Symbolic mathematics
numba==0.58.1  # JIT compiler for numerical functions

# Web scraping and data collection
beautifulsoup4==4.12.2  # HTML/XML parsing
scrapy==2.11.0  # Web scraping framework

# Video processing (optional for video OCR)
ffmpeg-python==0.2.0  # FFmpeg binding

# Audio processing (if extending to multimodal)
librosa==0.10.1  # Audio analysis
soundfile==0.12.1  # Audio file I/O

# Note for Windows users:
# 1. Install Tesseract OCR from: https://github.com/UB-Mannheim/tesseract/wiki
# 2. For GPU support with PyTorch, visit: https://pytorch.org/get-started/locally/
# 3. CUDA toolkit may be required for GPU training
# 4. Some packages may require Microsoft Visual C++ Redistributable
# 5. For font rendering, install system fonts or use bundled fonts

# Installation notes:
# - Use 'pip install -r requirements.txt' to install all dependencies
# - For development: 'pip install -r requirements.txt[dev]'
# - Some optional packages can be skipped if not needed
# - Consider using virtual environments: python -m venv ocr_env
